{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Projects/React_Udemy/createReactApp/01-starting-setup/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport './Expenses.css';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [year, setYear] = useState('2023');\n  function filterChangeHandler(selectedYear) {\n    // update the year that user selected\n    setYear(selectedYear);\n  }\n  ;\n\n  // filter() -> built in function that receives another function and returns a new array if it's true\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === year;\n  });\n\n  // if the array is empty, show a message by default screen\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 24\n  }, this);\n\n  // OTHERWISE, check if the array has items and update 'expensesContent' to show on screen only the filtered expenses by year\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        defaultYear: year,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"0H/j2iUsXPFijL5WpQ2R4ndJfBE=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","jsxDEV","_jsxDEV","Expenses","props","_s","year","setYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","className","defaultYear","onChangeFilter","_c","$RefreshReg$"],"sources":["/home/gabriel/Projects/React_Udemy/createReactApp/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import './Expenses.css'\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { useState } from 'react';\n\nfunction Expenses(props) {\n\n  const [year, setYear] = useState('2023');\n\n  function filterChangeHandler (selectedYear) {\n    // update the year that user selected\n    setYear(selectedYear);\n  };\n\n\n  // filter() -> built in function that receives another function and returns a new array if it's true\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === year;\n  });\n\n\n  // if the array is empty, show a message by default screen\n  let expensesContent= <p>No expenses found.</p>\n\n\n  // OTHERWISE, check if the array has items and update 'expensesContent' to show on screen only the filtered expenses by year\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem \n        key={expense.id}\n        title={expense.title} \n        amount={expense.amount} \n        date={expense.date}\n      />\n    ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n\n        <ExpensesFilter defaultYear={year} onChangeFilter={filterChangeHandler} />\n        \n        {expensesContent}\n\n      </Card>\n    </div>\n\n  );\n}\n\nexport default Expenses;"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAExC,SAASQ,mBAAmBA,CAAEC,YAAY,EAAE;IAC1C;IACAF,OAAO,CAACE,YAAY,CAAC;EACvB;EAAC;;EAGD;EACA,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACvD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKV,IAAI;EACvD,CAAC,CAAC;;EAGF;EACA,IAAIW,eAAe,gBAAEf,OAAA;IAAAgB,QAAA,EAAG;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;;EAG9C;EACA,IAAIZ,gBAAgB,CAACa,MAAM,GAAG,CAAC,EAAE;IAC/BN,eAAe,GAAGP,gBAAgB,CAACc,GAAG,CAAEX,OAAO,iBAC7CX,OAAA,CAACL,WAAW;MAEV4B,KAAK,EAAEZ,OAAO,CAACY,KAAM;MACrBC,MAAM,EAAEb,OAAO,CAACa,MAAO;MACvBZ,IAAI,EAAED,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACc,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKlB,CAAC;EACJ;EAEA,oBACEpB,OAAA;IAAAgB,QAAA,eACEhB,OAAA,CAACJ,IAAI;MAAC8B,SAAS,EAAC,UAAU;MAAAV,QAAA,gBAExBhB,OAAA,CAACH,cAAc;QAAC8B,WAAW,EAAEvB,IAAK;QAACwB,cAAc,EAAEtB;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAEzEL,eAAe;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAGV;AAACjB,EAAA,CA5CQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA8CjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}